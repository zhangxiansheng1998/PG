<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.1.1 r1855137">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="NTTdata" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">14400</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1800</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">600</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <boolProp name="useGroupName">true</boolProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatGraphVisualizer" testclass="ResultCollector" testname="Aggregate Graph" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="payment" enabled="false">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </LoopController>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MPGS" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;login&quot;:&quot;NTT&quot;,&#xd;
    &quot;pass&quot;:&quot;Ntt@123&quot;, &#xd;
    &quot;amt&quot;:&quot;1005&quot;,&#xd;
    &quot;txnid&quot;:&quot;txnidtest22oct1&quot;, &#xd;
    &quot;txncurr&quot;:&quot;TWD&quot;,&#xd;
    &quot;od&quot;:&quot;Testod&quot;,&#xd;
    &quot;signature&quot;:&quot;0f1c012551bf8840c457517d316062596edcbf068f6028e4abd66ee09dc55efee8a8f6a13ab1acf1abe6004abf5a33149301572264c264c7688a8c9cfedcc0ec&quot;,&#xd;
    &quot;carddata&quot;:&quot;umsElT+JxkX49UnU+jSpxvZ1dPFqWh9t73//AosP2/Q=|CardHolder|CC|AMEX&quot;,&#xd;
    &quot;customerDetails1&quot;: {&#xd;
    &quot;name&quot;: &quot;test&quot;,&#xd;
    &quot;email&quot;: &quot;ZZZ@123.com&quot;,&#xd;
    &quot;phone&quot;: &quot;86-13724745309&quot;&#xd;
     },&#xd;
     &quot;authentication1&quot;:&quot;Y&quot;,&#xd;
      &quot;flightDetails1&quot;: {&#xd;
        &quot;passengerName&quot;: &quot;NTT Test&quot;,&#xd;
        &quot;transactionType&quot;: &quot;01&quot;,&#xd;
        &quot;documentType&quot;: &quot;11&quot;,&#xd;
        &quot;flightNumber&quot;: &quot;KAP 123|KAP 134&quot;,&#xd;
        &quot;flightCarrierCode&quot;: &quot;AS|sa&quot;,&#xd;
        &quot;flightClassCode&quot;: &quot;0&quot;,&#xd;
        &quot;flightDepartureTime&quot;: &quot;2019-11-26 00:00|2019-11-26 00:00&quot;,&#xd;
        &quot;flightArrivalTime&quot;: &quot;2019-11-26 00:00&quot;,&#xd;
        &quot;flightAirportCode&quot;: &quot;NRT,PEK|NRT,PEK&quot;&#xd;
    },&#xd;
    &quot;manualCapture1&quot;:&quot;Y&quot;,&#xd;
    &quot;expirydate1&quot;:&quot;2021-06-03 23:10:00&quot;,&#xd;
   &quot;ru&quot;:&quot;https://uat.ndhkpay.com/NTT_Pages/return&quot;,&#xd;
    &quot;channelType&quot;:&quot;mpgs&quot;,&#xd;
    &quot;paymentMethod&quot;:&quot;card&quot;,&#xd;
     &quot;channelId&quot;:&quot;amex&quot;,&#xd;
    &quot;udf1&quot;:&quot;Test UDF 1&quot;,&#xd;
    &quot;udf2&quot;:&quot;Test UDF 2&quot;,&#xd;
    &quot;udf3&quot;:&quot;Test UDF 3&quot;,&#xd;
    &quot;udf4&quot;:&quot;Test UDF 4&quot;,&#xd;
    &quot;udf5&quot;:&quot;Test UDF 5&quot;,&#xd;
    &quot;callbackUrl&quot;:&quot;https://script.google.com/macros/s/AKfycbwRpCfYEQiDPGvCdE_mJXPWa9z42oSquQ4Ua5jQjd9B_k-L1wA/exec&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sit.ndhkpay.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/Ndhk_Api/paymentRequest</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1466367049">&quot;respcode&quot;:&quot;00&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="paygent non 3D" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
&quot;login&quot;:&quot;NTT&quot;,&#xd;
&quot;pass&quot;:&quot;Ntt@123&quot;, &#xd;
&quot;amt&quot;:&quot;100000&quot;,&#xd;
&quot;txnid&quot;:&quot;PerforTest01&quot;, &#xd;
&quot;txncurr&quot;:&quot;JPY&quot;,&#xd;
&quot;signature&quot;:&quot;7fc4bf491e2b4377fc8e8df604f62970c6684d066d4c88decf0d05c697571db254c83883d8ab15d203f4f4fbdb7eda40d2a5ef1e809d7b61aa37595dfff412da&quot;,&#xd;
&quot;expirydate1&quot;: &quot;2020-12-17 18:30:00&quot;,&#xd;
&quot;carddata&quot;: &quot;2cmY2hB/qKMGH7qi7fraskkQWp/bui8SH9mtFk4PYno=|John Doe|CC|VISA&quot;,&#xd;
&quot;ru1&quot;:&quot;https://script.google.com/macros/s/AKfycbwRpCfYEQiDPGvCdE_mJXPWa9z42oSquQ4Ua5jQjd9B_k-L1wA/exec&quot;,&#xd;
&quot;ru&quot;: &quot;https://uat.ndhkpay.com/NTT_Pages/return&quot;,&#xd;
&quot;callbackUrl&quot;: &quot;https://webhook.site/fc508d07-540c-4b61-b58c-e81573d95a82&quot;,&#xd;
&quot;channelType&quot;:&quot;paygent&quot;,&#xd;
&quot;od&quot;:&quot;testing&quot;,&#xd;
&quot;remarks&quot;:&quot;remarks&quot;,&#xd;
&quot;manualCapture&quot;: &quot;Y&quot;,&#xd;
&quot;authentication&quot;: &quot;N&quot;,&#xd;
&quot;paymentMethod&quot;:&quot;credit&quot;,&#xd;
&quot;customerDetails&quot;: {&#xd;
	&quot;lastName&quot;: &quot;lastname&quot;,&#xd;
	&quot;firstName&quot;: &quot;testing&quot;,&#xd;
	&quot;phone&quot;: &quot;123-0123456785&quot;&#xd;
}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sit.ndhkpay.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/Ndhk_Api/paymentRequest</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1466367049">&quot;respcode&quot;:&quot;00&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="post v2/transactions" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">signature</stringProp>
                <stringProp name="Header.value">912ad72e4c36f964fbc8b2a2bef3dba852e74c0fb527a3f1414d65a8e5583d48804ae0a653355ca1c15d487cfb1aaf9ba723e38f12dcccb13fac15783694d19e</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">apiKey</stringProp>
                <stringProp name="Header.value">ewfgWEGwegwerGERGqwE</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="mpgs_card" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;channelType&quot;: &quot;mpgs&quot;,&#xd;
	&quot;paymentMethod&quot;: &quot;card&quot;,&#xd;
	&quot;channelId&quot;: &quot;amex&quot;,&#xd;
	&quot;transactionId&quot;: &quot;loadTest_mpgs01&quot;,&#xd;
	&quot;transactionCurrency&quot;: &quot;TWD&quot;,&#xd;
	&quot;amount&quot;: &quot;100&quot;,&#xd;
	&quot;orderDescription&quot;: &quot;load Test for v2 Transactions(mpgs)&quot;,&#xd;
	&quot;paymentMode&quot;: &quot;PURCHASE&quot;,&#xd;
	&quot;cardData&quot;: &quot;rFcSyGPt21nHP36bXJ0PXa+QBirVtzkC9NqxS1GltaQqZPusxlQ6I+Hla3M=|CardHolder|CC|AMEX&quot;,&#xd;
	&quot;isStoreToken&quot;: false,&#xd;
	&quot;returnUrl&quot;: &quot;https://sit.ndhkpay.com/ntt-payment-page&quot;,&#xd;
	&quot;callbackUrl&quot;: &quot;http://sim.nttdhk.com/merchant/callback&quot;,&#xd;
	&quot;userDefinedData1&quot;: &quot;userDefinedData1&quot;,&#xd;
	&quot;userDefinedData2&quot;: &quot;userDefinedData2&quot;,&#xd;
	&quot;userDefinedData3&quot;: &quot;userDefinedData3&quot;,&#xd;
	&quot;userDefinedData4&quot;: &quot;userDefinedData4&quot;,&#xd;
	&quot;userDefinedData5&quot;: &quot;userDefinedData5&quot;,&#xd;
	&quot;isAuthentication&quot;: false&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sit.ndhkpay.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v2/transactions</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-565196897">&quot;processorCode&quot;:&quot;000&quot;,&quot;responseCode&quot;:&quot;00&quot;,&quot;responseDescription&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
