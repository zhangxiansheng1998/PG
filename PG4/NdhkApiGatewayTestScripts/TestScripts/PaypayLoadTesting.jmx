<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.1.1 r1855137">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Functional Tests" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
    </TestPlan>
    <hashTree>
      <SetupThreadGroup guiclass="SetupThreadGroupGui" testclass="SetupThreadGroup" testname="Set Config" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </SetupThreadGroup>
      <hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Properties Setting" enabled="true"/>
        <hashTree>
          <com.tag.jmeter.ext.config.PropertyReader guiclass="TestBeanGUI" testclass="com.tag.jmeter.ext.config.PropertyReader" testname="Config Property Reader" enabled="true">
            <stringProp name="propFilePath">config.properties</stringProp>
          </com.tag.jmeter.ext.config.PropertyReader>
          <hashTree/>
          <com.tag.jmeter.ext.config.PropertyReader guiclass="TestBeanGUI" testclass="com.tag.jmeter.ext.config.PropertyReader" testname="Request Property Reader" enabled="true">
            <stringProp name="propFilePath">request.properties</stringProp>
          </com.tag.jmeter.ext.config.PropertyReader>
          <hashTree/>
          <com.tag.jmeter.ext.config.PropertyReader guiclass="TestBeanGUI" testclass="com.tag.jmeter.ext.config.PropertyReader" testname="Environment Properties Reader" enabled="true">
            <stringProp name="propFilePath">${__BeanShell(props.get(&quot;homeDirectory&quot;)+ &quot;Environment&quot; + File.separator + (props.get(&quot;env&quot;) != null? props.get(&quot;env&quot;): props.get(&quot;cmd_environmentPropertiesPath&quot;))+ &quot;_environment.properties&quot;)}</stringProp>
          </com.tag.jmeter.ext.config.PropertyReader>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="Config Setting" enabled="true">
            <stringProp name="BeanShellSampler.query"></stringProp>
            <stringProp name="BeanShellSampler.filename">${__BeanShell(props.get(&quot;homeDirectory&quot;)+ &quot;TestScripts&quot; + File.separator + &quot;PropertiesSetting&quot; + File.separator + &quot;configSetting.bsh&quot;)}</stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Functional Tests" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">16800</stringProp>
        <stringProp name="ThreadGroup.ramp_time">840</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Auto Test JSON Data" enabled="true">
          <stringProp name="filename">${__P(testDataCSVPath1)}</stringProp>
          <stringProp name="fileEncoding">UTF-8</stringProp>
          <stringProp name="variableNames">jsonData</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">true</boolProp>
          <boolProp name="recycle">false</boolProp>
          <boolProp name="stopThread">true</boolProp>
          <stringProp name="shareMode">shareMode.group</stringProp>
        </CSVDataSet>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Set Test Flow" enabled="true">
          <stringProp name="scriptLanguage">javascript</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename">${__BeanShell(props.get(&quot;homeDirectory&quot;)+ &quot;TestScripts&quot; + File.separator + &quot;FunctionalTests&quot; + File.separator + &quot;setTestFlow.js&quot;)}</stringProp>
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="script"></stringProp>
        </JSR223Sampler>
        <hashTree/>
        <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="Test Flow Controller" enabled="true">
          <stringProp name="WhileController.condition">${__javaScript(vars.get(&quot;requestType&quot;) !== &quot;undefined&quot; &amp;&amp; (vars.get(&quot;skip&quot;) === &quot;undefined&quot; ||vars.get(&quot;skip&quot;) !== &quot;true&quot;))}</stringProp>
        </WhileController>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="Set Data Object" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename">${__BeanShell(props.get(&quot;homeDirectory&quot;)+ &quot;TestScripts&quot; + File.separator + &quot;FunctionalTests&quot; + File.separator + &quot;setDataObject.js&quot;)}</stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">${__BeanShell(props.get(&quot;homeDirectory&quot;)+ &quot;TestScripts&quot; + File.separator + &quot;FunctionalTests&quot; + File.separator + &quot;setDataObject.js&quot;)}</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Direct Request" enabled="true">
            <stringProp name="IfController.condition">${__javaScript(vars.get(&quot;requestType&quot;).indexOf(&quot;frontend&quot;) == -1)}</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
            <boolProp name="IfController.useExpression">true</boolProp>
          </IfController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${testDataId}" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${requestBody}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${__P(domain)}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">${__P(protocol)}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">Ndhk_Api/${requestURL}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="JSON Header" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="Set Request Body" enabled="true">
                <stringProp name="scriptLanguage">javascript</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename">${__BeanShell(props.get(&quot;homeDirectory&quot;)+ &quot;TestScripts&quot; + File.separator + &quot;FunctionalTests&quot; + File.separator + &quot;DirectRequest&quot; + File.separator + &quot;setRequestBody.js&quot;)}</stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script"></stringProp>
              </JSR223PreProcessor>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="Signature Generation" enabled="true">
                <stringProp name="filename">${__BeanShell(props.get(&quot;homeDirectory&quot;)+ &quot;TestScripts&quot; + File.separator + &quot;FunctionalTests&quot; + File.separator + &quot;DirectRequest&quot; + File.separator + &quot;signatureGeneration.bsh&quot;)}</stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script"></stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="Add Signature To Request Body" enabled="true">
                <stringProp name="scriptLanguage">javascript</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename">${__BeanShell(props.get(&quot;homeDirectory&quot;)+ &quot;TestScripts&quot; + File.separator + &quot;FunctionalTests&quot; + File.separator + &quot;DirectRequest&quot; + File.separator + &quot;addSignatureToRequestBody.js&quot;)}</stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script"></stringProp>
              </JSR223PreProcessor>
              <hashTree/>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Set Result Parameters" enabled="true">
                <stringProp name="scriptLanguage">javascript</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename">${__BeanShell(props.get(&quot;homeDirectory&quot;)+ &quot;TestScripts&quot; + File.separator + &quot;FunctionalTests&quot; + File.separator + &quot;DirectRequest&quot; + File.separator + &quot;setResultParameters.js&quot;)}</stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script"></stringProp>
              </JSR223PostProcessor>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Response Signature Generation" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename">${__BeanShell(props.get(&quot;homeDirectory&quot;)+ &quot;TestScripts&quot; + File.separator + &quot;FunctionalTests&quot; + File.separator + &quot;DirectRequest&quot; + File.separator + &quot;responseSignatureGeneration.bsh&quot;)}</stringProp>
                <stringProp name="script"></stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Set Response Signature" enabled="true">
                <stringProp name="scriptLanguage">javascript</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename">${__BeanShell(props.get(&quot;homeDirectory&quot;)+ &quot;TestScripts&quot; + File.separator + &quot;FunctionalTests&quot; + File.separator + &quot;DirectRequest&quot; + File.separator + &quot;SetResponseSignature.js&quot;)}</stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script"></stringProp>
              </JSR223PostProcessor>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="CaptureRequest Delay" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename">${__BeanShell(props.get(&quot;homeDirectory&quot;)+ &quot;TestScripts&quot; + File.separator + &quot;FunctionalTests&quot; + File.separator + &quot;DirectRequest&quot; + File.separator + &quot;captureRequestDelay.bsh&quot;)}</stringProp>
                <stringProp name="script"></stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSON Response Assertion" enabled="true">
                <stringProp name="scriptLanguage">javascript</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename">${__BeanShell(props.get(&quot;homeDirectory&quot;)+ &quot;TestScripts&quot; + File.separator + &quot;FunctionalTests&quot; + File.separator + &quot;DirectRequest&quot; + File.separator + &quot;jsonResponseAssertion.js&quot;)}</stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script"></stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Set Next Test Flow" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename">${__BeanShell(props.get(&quot;homeDirectory&quot;)+ &quot;TestScripts&quot; + File.separator + &quot;FunctionalTests&quot; + File.separator + &quot;setNextTestFlow.js&quot;)}</stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script"></stringProp>
          </JSR223Sampler>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Special Functional Tests" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">3600</stringProp>
        <stringProp name="ThreadGroup.ramp_time">60</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Auto Test JSON Data" enabled="true">
          <stringProp name="filename">${__P(testDataCSVPath2)}</stringProp>
          <stringProp name="fileEncoding">UTF-8</stringProp>
          <stringProp name="variableNames">jsonData</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">true</boolProp>
          <boolProp name="recycle">false</boolProp>
          <boolProp name="stopThread">true</boolProp>
          <stringProp name="shareMode">shareMode.group</stringProp>
        </CSVDataSet>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Set Test Flow" enabled="true">
          <stringProp name="scriptLanguage">javascript</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename">${__BeanShell(props.get(&quot;homeDirectory&quot;)+ &quot;TestScripts&quot; + File.separator + &quot;FunctionalTests&quot; + File.separator + &quot;setTestFlow.js&quot;)}</stringProp>
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="script"></stringProp>
        </JSR223Sampler>
        <hashTree/>
        <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="Test Flow Controller" enabled="true">
          <stringProp name="WhileController.condition">${__javaScript(vars.get(&quot;requestType&quot;) !== &quot;undefined&quot; &amp;&amp; (vars.get(&quot;skip&quot;) === &quot;undefined&quot; ||vars.get(&quot;skip&quot;) !== &quot;true&quot;))}</stringProp>
        </WhileController>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="Set Data Object" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename">${__BeanShell(props.get(&quot;homeDirectory&quot;)+ &quot;TestScripts&quot; + File.separator + &quot;FunctionalTests&quot; + File.separator + &quot;setDataObject.js&quot;)}</stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">${__BeanShell(props.get(&quot;homeDirectory&quot;)+ &quot;TestScripts&quot; + File.separator + &quot;FunctionalTests&quot; + File.separator + &quot;setDataObject.js&quot;)}</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Direct Request" enabled="true">
            <stringProp name="IfController.condition">${__javaScript(vars.get(&quot;requestType&quot;).indexOf(&quot;frontend&quot;) == -1)}</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
            <boolProp name="IfController.useExpression">true</boolProp>
          </IfController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${testDataId}: -${requestType}-${currenctDataObjSet}" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${requestBody}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${__P(domain)}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">${__P(protocol)}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">Ndhk_Api/${requestURL}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="JSON Header" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="Set Request Body" enabled="true">
                <stringProp name="scriptLanguage">javascript</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename">${__BeanShell(props.get(&quot;homeDirectory&quot;)+ &quot;TestScripts&quot; + File.separator + &quot;FunctionalTests&quot; + File.separator + &quot;DirectRequest&quot; + File.separator + &quot;setRequestBody.js&quot;)}</stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script"></stringProp>
              </JSR223PreProcessor>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="Signature Generation" enabled="true">
                <stringProp name="filename">${__BeanShell(props.get(&quot;homeDirectory&quot;)+ &quot;TestScripts&quot; + File.separator + &quot;FunctionalTests&quot; + File.separator + &quot;DirectRequest&quot; + File.separator + &quot;signatureGeneration.bsh&quot;)}</stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script"></stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="Add Signature To Request Body" enabled="true">
                <stringProp name="scriptLanguage">javascript</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename">${__BeanShell(props.get(&quot;homeDirectory&quot;)+ &quot;TestScripts&quot; + File.separator + &quot;FunctionalTests&quot; + File.separator + &quot;DirectRequest&quot; + File.separator + &quot;addSignatureToRequestBody.js&quot;)}</stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script"></stringProp>
              </JSR223PreProcessor>
              <hashTree/>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Set Result Parameters" enabled="true">
                <stringProp name="scriptLanguage">javascript</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename">${__BeanShell(props.get(&quot;homeDirectory&quot;)+ &quot;TestScripts&quot; + File.separator + &quot;FunctionalTests&quot; + File.separator + &quot;DirectRequest&quot; + File.separator + &quot;setResultParameters.js&quot;)}</stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script"></stringProp>
              </JSR223PostProcessor>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Response Signature Generation" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename">${__BeanShell(props.get(&quot;homeDirectory&quot;)+ &quot;TestScripts&quot; + File.separator + &quot;FunctionalTests&quot; + File.separator + &quot;DirectRequest&quot; + File.separator + &quot;responseSignatureGeneration.bsh&quot;)}</stringProp>
                <stringProp name="script"></stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Set Response Signature" enabled="true">
                <stringProp name="scriptLanguage">javascript</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename">${__BeanShell(props.get(&quot;homeDirectory&quot;)+ &quot;TestScripts&quot; + File.separator + &quot;FunctionalTests&quot; + File.separator + &quot;DirectRequest&quot; + File.separator + &quot;SetResponseSignature.js&quot;)}</stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script"></stringProp>
              </JSR223PostProcessor>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="CaptureRequest Delay" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename">${__BeanShell(props.get(&quot;homeDirectory&quot;)+ &quot;TestScripts&quot; + File.separator + &quot;FunctionalTests&quot; + File.separator + &quot;DirectRequest&quot; + File.separator + &quot;captureRequestDelay.bsh&quot;)}</stringProp>
                <stringProp name="script"></stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSON Response Assertion" enabled="true">
                <stringProp name="scriptLanguage">javascript</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename">${__BeanShell(props.get(&quot;homeDirectory&quot;)+ &quot;TestScripts&quot; + File.separator + &quot;FunctionalTests&quot; + File.separator + &quot;DirectRequest&quot; + File.separator + &quot;jsonResponseAssertion.js&quot;)}</stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script"></stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Set Next Test Flow" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename">${__BeanShell(props.get(&quot;homeDirectory&quot;)+ &quot;TestScripts&quot; + File.separator + &quot;FunctionalTests&quot; + File.separator + &quot;setNextTestFlow.js&quot;)}</stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script"></stringProp>
          </JSR223Sampler>
          <hashTree/>
        </hashTree>
      </hashTree>
      <PostThreadGroup guiclass="PostThreadGroupGui" testclass="PostThreadGroup" testname="Report" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </PostThreadGroup>
      <hashTree>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="Report Generator" enabled="true">
          <stringProp name="BeanShellSampler.query"></stringProp>
          <stringProp name="BeanShellSampler.filename">${__BeanShell(props.get(&quot;homeDirectory&quot;)+ &quot;TestScripts&quot; + File.separator + &quot;FunctionalTests&quot; + File.separator + &quot;Report&quot; + File.separator + &quot;reportGenerator.bsh&quot;)}</stringProp>
          <stringProp name="BeanShellSampler.parameters"></stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
        </BeanShellSampler>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>true</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <fileName>true</fileName>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">${__P(homeDirectory)}/TestResults/CaptureRequestResponse.csv</stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
